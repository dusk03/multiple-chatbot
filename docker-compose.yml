services:
  backend:
    build:
      context: ./backend
    container_name: fastapi_app
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    networks:
      ai_mapping_network:
        ipv4_address: 172.24.0.20

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_mapping
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      ai_mapping_network:
        ipv4_address: 172.24.0.10

  redis:
    image: redis:7
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - ai_mapping_network

  celery:
    build:
      context: ./backend
    container_name: celery_worker
    command: celery -A src.celery_tasks.c_app worker --loglevel=info --pool=solo
    volumes:
      - ./backend:/app
    env_file: ./backend/.env
    depends_on:
      - backend
      - redis
    networks:
      ai_mapping_network:
        ipv4_address: 172.24.0.30

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vite_frontend
    networks:
      ai_mapping_network:
        ipv4_address: 172.24.0.40

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      ai_mapping_network:
        ipv4_address: 172.24.0.50

volumes:
  postgres_data:

networks:
  ai_mapping_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16
